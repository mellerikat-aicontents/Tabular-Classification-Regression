name: TCR
version: 2.2.2

external_path:
    - load_train_data_path: ./solution/sample_data/train
    - load_inference_data_path:  ./solution/sample_data/test
    - save_train_artifacts_path:
    - save_inference_artifacts_path:
    - load_model_path:

external_path_permission:
    - aws_key_profile: 
 

user_parameters:
    - train_pipeline:
        - step: input 
          args:
            - file_type: csv
              encoding: utf-8
          ui_args: 
        
        - step: readiness
          args:
            - x_columns: [input_x0,input_x1,input_x2,input_x3]
              y_column: target
              task_type: classification
              target_label: _major
              column_types: auto
              report: True
          ui_args:
            - x_columns
            - y_column

        - step: preprocess
          args:
          ui_args:

        - step: sampling
          args:
            - data_split: {method: cross_validation, options: 3}
          ui_args:

        - step: train
          args:
            - evaluation_metric: auto
              shapley_value: False 
              output_type: all
          ui_args:
            - evaluation_metric
            - shapley_value

        - step: output
          args:
          ui_args:

    - inference_pipeline:
        - step: input  
          args:
          ui_args: 
        
        - step: readiness
          args:
          ui_args:

        - step: preprocess
          args:
          ui_args:

        - step: inference
          args:
          ui_args:

        - step: output
          args:
          ui_args:


asset_source:
    - train_pipeline:
        - step: input
          source:  ## git / local   
            code: https://github.com/mellerikat-aicontents/input.git
            # code: local
            branch: v1.0.1_tabular  
            requirements:
              - pandas==1.5.3
              - numpy==1.26.4

        - step: readiness
          source:  ## git / local  
            code: https://github.com/mellerikat-aicontents/readiness.git
            # code: local
            branch: v1.2_tcr
            requirements:
              - requirements.txt

        - step: preprocess
          source:  ## git / local   
            code: https://github.com/mellerikat-aicontents/preprocess.git
            # code: local
            branch: v2.1.2_tcr 
            requirements:
              - requirements.txt

        - step: sampling
          source:  ## git / local   
            code: https://github.com/mellerikat-aicontents/sampling.git
            # code: local
            branch: v1.1_tabular
            requirements:
              - requirements.txt

        - step: train
          source:  ## git / local 
            code: https://github.com/mellerikat-aicontents/tcr_modeling_ml.git
            # code: local
            branch: v2.1.5
            requirements:
              - requirements.txt 
    
        - step: output
          source:  ## git / local 
            code: https://github.com/mellerikat-aicontents/output.git
            # code: local
            branch: v1.0.0
            requirements:
              - requirements.txt
   
    - inference_pipeline:
        - step: input
          source:  ## git / local 
            code: https://github.com/mellerikat-aicontents/input.git
            # code: local
            branch: v1.0.1_tabular 
            requirements:
              - pandas==1.5.3
              - numpy==1.26.4

        - step: readiness
          source:  ## git / local 
            code: https://github.com/mellerikat-aicontents/readiness.git
            # code: local
            branch: v1.2_tcr
            requirements:
              - requirements.txt

        - step: preprocess
          source:  ## git / local 
            code: https://github.com/mellerikat-aicontents/preprocess.git
            # code: local
            branch: v2.1.2_tcr 
            requirements:
              - requirements.txt

        - step: inference
          source:  ## git / local 
            code: https://github.com/mellerikat-aicontents/tcr_modeling_ml.git
            # code: local
            branch: v2.1.5
            requirements:
              - requirements.txt 
    
        - step: output
          source:  ## git / local 
            code: https://github.com/mellerikat-aicontents/output.git
            # code: local
            branch: v1.0.0
            requirements:
              - requirements.txt
           
     
control:
    ## 1. whether to install assets and dependency packages once or every time. 
    - get_asset_source: once ## once, every
    ## 2. whether to backup saved artifacts
    - backup_artifacts: True ## True, False
    ## 3. whether to backup log
    - backup_log: True  ## True, False
    ## 4. determine artifacts backup size(MB)
    - backup_size: 1000
    ## 5. asset data, config interfacing method - memory: (fast) / file: (saved; non-volatilizing) 
    - interface_mode: memory ## memory, file
    ## 6. inference artifacts compression format 
    - save_inference_format: tar.gz ## tar.gz, zip
    ## 7. resource check 
    - check_resource: False ## True: measure memory, cpu / False  


########
ui_args_detail:
    - train_pipeline:
        - step: input 
          args:
              - name: file_type
                description: Please enter the file extension of the input data. (Currently, AI Solution registration only supports csv files.)
                type: single_selection
                default: csv
                selectable:
                  - csv
              - name: encoding
                description: Please enter the encoding type of the input data. (Currently, AI Solution registration only supports utf-8.)
                type: string
                default: utf-8
                range:
                  - 1
                  - 1000000
        - step: readiness 
          args:
              - name: x_columns
                description: Please enter the names of the target x columns in the DataFrame, separated by commas.
                type: string
                default: ''
                range:
                  - 1
                  - 1000000
              - name: y_column
                description: Please enter the name of the y column in the DataFrame.
                type: string
                default: ''
                range:
                  - 1
                  - 1000000
              - name: task_type
                description: Please enter the type of the Solution task (classification/regression).
                type: single_selection
                default: classification
                selectable:
                  - classification
                  - regression
              - name: report
                description: A summary CSV for the train/inference data will be generated.
                type: single_selection
                default: True
                selectable:
                  - True
                  - False   
              - name: drop_x_columns
                description: The columns specified in drop_x_columns will be excluded from the entire DataFrame and the remaining columns will be used for training (y_column and groupkey_columns will also be excluded). Please separate multiple columns with commas.
                type: string
                default: ''
                range:
                  - 1
                  - 1000000
              - name: groupkey_columns
                description: If you enter the groupkey column, the DataFrame will be grouped based on the values of that column. If there are multiple columns, please separate them with commas.
                type: string
                default: ''
                range:
                  - 1
                  - 1000000
        - step: preprocess
          args:
              - name: save_original_columns
                description: You need to decide whether to replace the original training columns (x_columns) with the preprocessed training columns. If set to True, both the original x_columns and the preprocessed x_columns will be passed to the next asset. If set to False, the original x_columns will be replaced by the preprocessed x_columns and will not be passed to the next asset.
                type: single_selection
                default: True
                selectable:
                  - True
                  - False    
        - step: train 
          args:
              - name: evaluation_metric
                description: Please select the evaluation metric to choose the model during HPO (Hyperparameter Optimization).
                type: single_selection
                default: auto
                selectable:
                  - auto
                  - accuracy
                  - f1
                  - recall
                  - precision
                  - mse
                  - r2
                  - mae
                  - rmse    
              - name: shapley_value
                description: You need to decide whether to calculate the Shapley values and output them to output.csv.
                type: single_selection
                default: False
                selectable:
                  - False
                  - True
              - name: output_type
                description: You need to decide whether to save all columns, including the modeling results, to output.csv (all), or to save only the modeling columns (simple).
                type: single_selection
                default: all
                selectable:
                  - all
                  - simple
              - name: multiprocessing
                description: Please specify whether to use multiprocessing.
                type: single_selection
                default: True
                selectable:
                  - True
                  - False
              - name: num_cpu_core
                description: Please enter the number of CPU cores to use for multiprocessing.
                type: int
                default: 
                  - 3
                range:
                  - 1
                  - 100000
    - inference_pipeline:
