## 외부에서 데이터 가져오기 / 결과 저장하는 경우 해당 위치에 지정
external_path:
    - load_train_data_path: ./solution/sample_data/train_prep/ # ./solution/sample_data/train/
    - load_inference_data_path: ./solution/sample_data/test_prep/ # ./solution/sample_data/test/
    - save_train_artifacts_path:
    - save_inference_artifacts_path:
    - load_model_path:

external_path_permission:
    - s3_private_key_file: 
 
## 실험에 필요한 파라미터를 설정함 
## - 해당 위치에서 삭제되면, code 의 default 로 실행
user_parameters:
    - train_pipeline:
        - step: input  ## 필수
          args:
            - file_type: 'csv'
              encoding: 'utf-8'
          ui_args: 
        
        - step: readiness
          args:
            - x_columns: ['Age', 'Fare', 'Embarked','SibSp','Cabin']
              y_column: 'Survived'
              column_types: 'auto'
              task_type: 'classification'
          ui_args:

        - step: preprocess
          args:
          ui_args:

        - step: train
          args:
            - pos_label: '_major'
              evaluation_metric: 'auto'
              shapley_value: False 
          ui_args:
            - pos_label
            - evaluation_metric
            - shapley_value

        - step: output
          args:
          ui_args:

    - inference_pipeline:
        - step: input  ## 필수
          args:
          ui_args: 
        
        - step: readiness
          args:
          ui_args:

        - step: preprocess
          args:
          ui_args:

        - step: inference
          args:
          ui_args:

        - step: output
          args:
          ui_args:

## asset 의 설치 정보를 기록       
asset_source:
    - train_pipeline:
        - step: input
          source:  ## git / local 지원
            code: http://mod.lge.com/hub/dxadvtech/assets/input.git
            # code: local
            branch: tabular_jhong # tabular 
            requirements:
              - pandas==1.5.3

        - step: readiness
          source:  ## git / local 지원
            code: http://mod.lge.com/hub/dxadvtech/assets/readiness.git
            # code: local
            branch: tcr-0.9.0
            requirements:
              - requirements.txt

        - step: preprocess
          source:  ## git / local 지원
            code: http://mod.lge.com/hub/dxadvtech/assets/preps.git
            # code: local
            branch: prep_dev
            requirements:
              - requirements.txt

        - step: train
          source:
            code: http://mod.lge.com/hub/dxadvtech/assets/tcr_ml.git
            # code: local
            branch: dev_pre_release
            requirements:
              - requirements.txt 
    
        - step: output
          source:
            code: http://mod.lge.com/hub/dxadvtech/assets/output.git
            # code: local
            branch: output_dev
            requirements:
              - requirements.txt
   
    - inference_pipeline:
        - step: input
          source:  ## git / local 지원
            code: http://mod.lge.com/hub/dxadvtech/assets/input.git
            # code: local
            branch: tabular_jhong # tabular 
            requirements:
              - pandas==1.5.3

        - step: readiness
          source:  ## git / local 지원
            code: http://mod.lge.com/hub/dxadvtech/assets/readiness.git
            # code: local
            branch: tcr-0.9.0
            requirements:
              - requirements.txt

        - step: preprocess
          source:  ## git / local 지원
            code: http://mod.lge.com/hub/dxadvtech/assets/preps.git
            # code: local
            branch: prep_dev
            requirements:
              - requirements.txt

        - step: inference
          source:
            code: http://mod.lge.com/hub/dxadvtech/assets/tcr_ml.git
            # code: local
            branch: dev_pre_release
            requirements:
              - requirements.txt 
    
        - step: output
          source:
            code: http://mod.lge.com/hub/dxadvtech/assets/output.git
            # code: local
            branch: output_dev
            requirements:
              - requirements.txt
           
     
control:
    ## 1. 패키지 설치 및 asset 존재 여부를 실험 시마다 체크할지, 한번만 할지 결정
    ## 1-2 requirements.txt 및 종속 패키지들 한번만 설치할 지 매번 설치할지도 결정 
    - get_asset_source: once ## once, every
    ## 1-3 external path로 부터 data load 관련하여 한번만 가져올 지 매번 가져올지 결정 
    - get_external_data: once ## once, every
    ## 2. 생성된 artifacts 를 backup 할지를 결정 True/False
    - backup_artifacts: True
    ## 3. pipeline 로그를 backup 할지를 결정 True/False
    - backup_log: True
    ## 4. 저장 공간 사이즈를 결정 (단위 MB)
    - backup_size: 1000
 
    ## 5. Asset 사이 데이터 전달 방법으로 memory, file 를 지원
    - interface_mode: file

########
ui_args_detail:
    - train_pipeline:
        - step: input 
          args:
              - name: x_columns
                description: TCR 모델링에 사용될 x columns를 ','로 구분하여 기입합니다. ex) x_column1, x_column2
                type: string
                default: ''
                range:
                  - 1
                  - 1000000
 
              - name: y_column
                description: TCR 모델링에 사용될 y column명을 기입합니다. ex) y_column
                type: string
                default: ''
                range:
                  - 1
                  - 1000000

        - step: train
          args:
              - name: model_type
                description: 학습 유형을 선택합니다.
                type: single_selection
                default: classification
                selectable:
                  - classification
                  - regression

              - name: evaluation_metric
                description: TCR 학습 시 best 모델 선정 기준을 선택합니다.
                type: single_selection
                default: accuracy
                selectable:
                  - accuracy
                  - precision
                  - recall
                  - f1-score

              - name: shap_ratio
                description: 학습에 사용된 데이터 중 입력한 비율 만큼 shapley value를 출력합니다.
                type: float
                default: 0.1
                range:
                  - 0.001
                  - 0.99

    - inference_pipeline:
        - step: input 
          args:
              - name: x_columns
                description: TCR 모델링에 사용될 x columns를 ','로 구분하여 기입합니다. ex) x_column1, x_column2
                type: string
                default:
                range:
                  - 1
                  - 1000000

        - step: inference
          args:
              - name: run_shapley
                description: "inference시 shapley value 출력 여부를 결정합니다 (shapley value 출력: True)"
                type: single_selection
                default: True
                selectable:
                  - True
                  - False