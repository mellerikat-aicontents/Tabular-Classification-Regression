name: tcr
version: 2.2

## 외부에서 데이터 가져오기 / 결과 저장하는 경우 해당 위치에 지정
external_path:
    - load_train_data_path: ./solution/sample_data/train
    - load_inference_data_path:  ./solution/sample_data/test
    - save_train_artifacts_path:
    - save_inference_artifacts_path:
    - load_model_path:

external_path_permission:
    - aws_key_profile: 
 
## 실험에 필요한 파라미터를 설정함 
## - 해당 위치에서 삭제되면, code 의 default 로 실행
user_parameters:
    - train_pipeline:
        - step: input 
          args:
            - file_type: csv
              encoding: utf-8
          ui_args: 
        
        - step: readiness
          args:
            - x_columns: [input_x0,input_x1,input_x2,input_x3]
              y_column: target
              task_type: classification
              target_label: _major
              column_types: auto
          ui_args:
            - x_columns
            - y_column

        - step: preprocess
          args:
          ui_args:

        - step: sampling
          args:
            - data_split: {method: cross_validation, options: 3}
          ui_args:

        - step: train
          args:
            - evaluation_metric: auto
              shapley_value: False 
              output_type: all
          ui_args:
            - evaluation_metric
            - shapley_value

        - step: output
          args:
          ui_args:

    - inference_pipeline:
        - step: input  
          args:
          ui_args: 
        
        - step: readiness
          args:
          ui_args:

        - step: preprocess
          args:
          ui_args:

        - step: inference
          args:
          ui_args:

        - step: output
          args:
          ui_args:

## asset 의 설치 정보를 기록       
asset_source:
    - train_pipeline:
        - step: input
          source:  ## git / local 지원
            code: https://github.com/mellerikat-aicontents/input.git
            # code: local
            branch: v1.0.1_tabular  
            requirements:
              - pandas==1.5.3
              - numpy==1.26.4

        - step: readiness
          source:  ## git / local 지원
            code: https://github.com/mellerikat-aicontents/readiness.git
            # code: local
            branch: v1.1_tcr
            requirements:
              - requirements.txt

        - step: preprocess
          source:  ## git / local 지원
            code: https://github.com/meerkat-ai-contents/preprocess.git
            # code: local
            branch: v2.1_tcr
            requirements:
              - requirements.txt

        - step: sampling
          source:  ## git / local 지원
            code: https://github.com/meerkat-ai-contents/sampling.git
            # code: local
            branch: v1.0.2_tabular
            requirements:
              - requirements.txt

        - step: train
          source:
            code: https://github.com/mellerikat-aicontents/tcr_modeling_ml.git
            # code: local
            branch: v2.1.3
            requirements:
              - requirements.txt 
    
        - step: output
          source:
            code: https://github.com/meerkat-ai-contents/output.git
            # code: local
            branch: v1.0.0
            requirements:
              - requirements.txt
   
    - inference_pipeline:
        - step: input
          source:  ## git / local 지원
            code: https://github.com/meerkat-ai-contents/input.git
            # code: local
            branch: v1.0.1_tabular 
            requirements:
              - pandas==1.5.3
              - numpy==1.26.4

        - step: readiness
          source:  ## git / local 지원
            code: https://github.com/meerkat-ai-contents/readiness.git
            # code: local
            branch: v1.1_tcr
            requirements:
              - requirements.txt

        - step: preprocess
          source:  ## git / local 지원
            code: https://github.com/meerkat-ai-contents/preprocess.git
            # code: local
            branch: v2.1_tcr
            requirements:
              - requirements.txt

        - step: inference
          source:
            code: https://github.com/mellerikat-aicontents/tcr_modeling_ml.git
            # code: local
            branch: v2.1.3
            requirements:
              - requirements.txt 
    
        - step: output
          source:
            code: https://github.com/meerkat-ai-contents/output.git
            # code: local
            branch: v1.0.0
            requirements:
              - requirements.txt
           
     
control:
    ## 1. whether to install assets and dependency packages once or every time. 
    - get_asset_source: once ## once, every
    ## 2. whether to backup saved artifacts
    - backup_artifacts: True ## True, False
    ## 3. whether to backup log
    - backup_log: True  ## True, False
    ## 4. determine artifacts backup size(MB)
    - backup_size: 1000
    ## 5. asset data, config interfacing method - memory: (fast) / file: (saved; non-volatilizing) 
    - interface_mode: memory ## memory, file
    ## 6. inference artifacts compression format 
    - save_inference_format: tar.gz ## tar.gz, zip
    ## 7. resource check 
    - check_resource: False ## True: measure memory, cpu / False  


########
ui_args_detail:
    - train_pipeline:
        - step: input 
          args:
              - name: file_type
                description: input data의 파일 확장자를 입력합니다.(현재 AI Solution 등록은 csv만 가능합니다.)
                type: single_selection
                default: csv
                selectable:
                  - csv
              - name: encoding
                description: input data의 encoding type을 입력합니다.(현재 AI Solution 등록은 utf-8만 가능합니다.)
                type: string
                default: utf-8
                range:
                  - 1
                  - 1000000
        - step: readiness 
          args:
              - name: x_columns
                description: Dataframe에 있는 학습 대상 x 컬럼 명을 ','로 구분하여 입력합니다.
                type: string
                default: ''
                range:
                  - 1
                  - 1000000
              - name: y_column
                description: Dataframe에 있는 y 컬럼 명을 입력합니다.
                type: string
                default: ''
                range:
                  - 1
                  - 1000000
              - name: task_type
                description: Solution 과제의 유형(classification/regression)을 입력합니다.
                type: single_selection
                default: classification
                selectable:
                  - classification
                  - regression
              - name: drop_x_columns
                description: dataframe 전체 컬럼에서 drop_x_columns에 입력한 컬럼을 제외하여 학습 컬럼으로 사용합니다(y_column, groupkey_columns도 제외 됨). 컬럼 여러개는 ','로 구분하여 입력하세요.
                type: string
                default: ''
                range:
                  - 1
                  - 1000000
              - name: groupkey_columns
                description: groupkey 컬럼을 입력하면 해당 컬럼의 value 값을 기준으로 dataframe을 grouping합니다. 컬럼이 여러개면 ','로 구분하여 입력합니다.
                type: string
                default: ''
                range:
                  - 1
                  - 1000000
        - step: preprocess
          args:
              - name: save_original_columns
                description: 원본 학습 컬럼(x_columns)를 전처리 된 학습컬럼으로 대체할지 결정합니다. True일 경우 원본 x_columns와 전처리 된 x_columns가 함께 다음 asset으로 전달됩니다. False일 경우,  원본 x_columns는 전처리 된 x_columns로 대체 되고 다음 asset으로 전달되지 않습니다.
                type: single_selection
                default: True
                selectable:
                  - True
                  - False    
        - step: train 
          args:
              - name: evaluation_metric
                description: HPO시 모델을 선택하기 위한 평가 metric을 선택합니다.
                type: single_selection
                default: auto
                selectable:
                  - auto
                  - accuracy
                  - f1
                  - recall
                  - precision
                  - mse
                  - r2
                  - mae
                  - rmse    
              - name: shapley_value
                description: shapley value를 계산하여 output.csv에 출력할지 결정합니다.
                type: single_selection
                default: False
                selectable:
                  - False
                  - True
              - name: output_type
                description: output.csv에 전체 컬럼과 모델링 결과 컬럼 전체를 저장할지(all), 모델링 컬럼만 저장할지(simple) 결정합니다.
                type: single_selection
                default: all
                selectable:
                  - all
                  - simple
              - name: multiprocessing
                description: Multiprocessing 사용 여부를 입력합니다.
                type: single_selection
                default: True
                selectable:
                  - True
                  - False
              - name: num_cpu_core
                description: Multiprocessing시 사용할 CPU core 수를 입력합니다.
                type: int
                default: 3
                range:
                  - 1
                  - 100000
    - inference_pipeline: